{
  "name": "download.jqueryui.com",
  "version": "1.10.3-8",
  "dependencies": {
    "archiver": "0.4.1",
    "async": "0.1.22",
    "connect": "1.8.5",
    "dateformat": "1.0.2-1.2.3",
    "formidable": "1.0.9",
    "glob-whatev": "0.1.7",
    "gm": "1.8.1",
    "grunt": "0.4.1",
    "grunt-check-modules": "0.2.0",
    "grunt-contrib-handlebars": "0.5.7",
    "grunt-contrib-jshint": "0.2.0",
    "grunt-contrib-uglify": "0.2.0",
    "handlebars": "1.0.12",
    "lzma": "1.2.1",
    "optimist": "0.3.4",
    "rimraf": "2.0.2",
    "semver": "1.1.0",
    "simple-log": "1.1.0",
    "sqwish": "0.2.0",
    "uglify-js": "2.2.5",
    "underscore": "1.4.4",
    "winston": "0.6.2"
  },
  "devDependencies": {
    "nodeunit": "0.7.4"
  },
  "main": "main.js",
  "engine": {
    "node": ">=0.8.x"
  },
  "scripts": {
    "test": "nodeunit test",
    "start": "node server.js"
  },
  "readme": "jQuery UI DownloadBuilder & ThemeRoller backend and frontend application.\n\n## Requirements\n- node >= 0.8.x.\n- ImageMagick 6.6.x. (see apendix below for instructions to compile it from source)\n- npm.\n- grunt-cli. (installed globally via npm)\n- [api.jquery.com](https://github.com/jquery/api.jquery.com) requirements.\n\n## Getting Started\n\nInstall node modules.\n```\n$ npm install\n```\n\nPrepare the releases (declared in `config.json`) and build the frontend js bundles.\n```\n$ grunt prepare\n```\n\nRun the server.\n```\n$ node server.js --console\n```\n\nGo to the URL it outputs.\n\n## Development\n\n### config.json\n\nUse the config file to define which jQueryUI version DownloadBuilder should serve. Eg:\n```\n\"jqueryUi\": {\n  \"stable\": {  // required\n    \"version\": \"1.10.0\"\n    \"dependsOn\": \"jQuery 1.7+\"\n  },\n  \"legacy\": {  // optional\n    \"version\": \"1.9.1\"\n    \"dependsOn\": \"jQuery 1.6+\"\n  }\n}\n```\n\nThe `stable` release is required, but `legacy` is optional. Each release has the following attributes:\n- `version` is a String, can be a tag or a branch of jQuery UI. Note: use `repo/branch` eg. `origin/master` when defining a branch.\n- `dependsOn` is a String, any textual value allowed.\n- `path` [optional] can be used instead of `version` to straight point to the prepared release path.\n\n\n### node server.js\n\nUse `node server.js` to run the server. Arguments:\n- `--console` output to console instead of syslog (via simple-log module);\n- `--host <name>` specify custom host. Default localhost;\n- `--nocache` skip caching release files and theme images;\n- `--port <number>` specify custom port. Default 8088;\n\n\n### Test\n\nUse `npm test` to run the unit tests.\n\n\n## Deploy on WP\n\nOn [jqueryui.com](https://github.com/jquery/jqueryui.com), run `grunt deploy` [note, run that on jqueryui.com repo]. More details on its README.\n\n### Local testing\n\nHere's how to do integration testing with WordPress:\n\nSymlink your local download.jqueryui.com module on jqueryui.com.\n```\n$ cd <local download.jqueryui.com path>\n$ npm link\n$ cd <local jqueryui.com path>\n$ npm link download.jqueryui.com\n```\n\nTemporarily change its `grunt.js` to use localhost instead of http://download.jqueryui.com.\n```diff\n                var frontend = require( \"download.jqueryui.com\" ).frontend({\n-                               host: \"http://download.jqueryui.com\"\n+                               host: \"http://localhost:8088\",\n                                env: \"production\"\n                        }),\n```\n\n## Appendix\n\n### Compile and install ImageMagick from source\n\nCommands:\n```\n$ wget http://www.imagemagick.org/download/legacy/ImageMagick-6.6.9-10.tar.gz\n$ tar -xzf ImageMagick-6.6.9-10.tar.gz\n$ cd ImageMagick-6.6.9-10\n$ ./configure CFLAGS=-O5 CXXFLAGS=-O5 --prefix=/opt --enable-static --with-png --disable-shared\n```\n\nMake sure you have the below in the output.\n```\nPNG               --with-png=yes\t\tyes\n```\n\nIf \"png=yes no\", libpng is missing and needs to be installed, `apt-get install libpng-dev` on linux or `brew install libpng` on OS X.\n\nContinuing...\n```\n$ make -j5 && sudo make install\nexport MAGICK_HOME=\"/opt\"\nexport PATH=\"$MAGICK_HOME/bin:$PATH\"\nexport LD_LIBRARY_PATH=\"$MAGICK_HOME/lib/\"\nexport DYLD_LIBRARY_PATH=\"$MAGICK_HOME/lib/\"\n```\n\nMake sure you get the right bin when running it.\n```\n$ which convert\n/opt/bin/convert\n```\n\nHint: add those export statements into your .bash_profile.\n",
  "readmeFilename": "README.md",
  "description": "jQuery UI DownloadBuilder & ThemeRoller backend and frontend application.",
  "_id": "download.jqueryui.com@1.10.3-8",
  "dist": {
    "shasum": "827a02c5940b61027095ba494508dc07f745f574"
  },
  "_from": "download.jqueryui.com@",
  "_resolved": "https://registry.npmjs.org/download.jqueryui.com/-/download.jqueryui.com-1.10.3-8.tgz"
}
