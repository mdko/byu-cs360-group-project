var Readable,
	_Readable = require( "stream" ).Readable || require( "readable-stream" ),
	util = require( "util" );

Readable = function( options ) {
	_Readable.call( this, options );
};

util.inherits( Readable, _Readable );

Readable.prototype._read = function() {
	console.log("_read", typeof this.data, this.data && this.data.length);
	if ( typeof this.data !== "undefined" ) {
		console.log("pushed hihihi");
		this.push( this.data );
		this.data = null;
	}
};

Readable.prototype.resolve = function( error, data ) {
	console.log("resolve", !!error, data.length, this._readableState.calledRead);
	if ( error ) {
		return this.emit( "error", error );
	}
	this.data = data;
	if ( this._readableState.calledRead ) {
		this._read();
	}
};

module.exports = {
	Readable: Readable
};

/*

r = new (require("./lib/stream").Readable)({end:true}); null;
w = require("fs").createWriteStream("/tmp/teste.txt"); null;
r.on("end", function() {console.log("r end")}); null;
r.on("error", function() {console.log("r errro", arguments)}); null;
w.on("error", function() {console.log("w error", arguments)}); null;
w.on("finish", function() {console.log("w end")}); null;
r.pipe(w); null;
r.resolve(null, "Hello World!\n"); null;

*/
